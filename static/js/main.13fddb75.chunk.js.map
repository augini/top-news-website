{"version":3,"sources":["components/Covid19/CountryPicker/CountryPicker.module.css","components/Covid19/CovidChart/Chart.module.css","components/Navbar/Navbar.js","components/HeaderNews/HeaderNews/HeaderNews.js","components/HeaderNews/HeaderNewsLine.js","components/Footer/FooterPage.js","components/Carousel/CarouselPage.js","components/Tab/TabCard/TabCard.js","components/Tab/TabList/TabList.js","components/Covid19/CovidCard/CovidCard.js","api/index.js","components/Covid19/CountryPicker/CountryPicker.js","components/Covid19/CovidChart/CovidChart.js","components/Covid19/CovidPage.js","components/Tab/TabPage.js","components/Welcome/Welcome.js","components/Spinner/SpinnnerPage.js","components/Discover/DiscoverCard/DiscoverCard.js","components/Discover/DiscoverCardList/DiscoverCardList.js","components/Discover/Discover.js","consonants/CountryChangeConsonants.js","App.js","serviceWorker.js","index.js","components/Navbar/russia.svg","components/Navbar/united-states-of-america.svg","components/Navbar/south-korea.svg"],"names":["module","exports","NavbarPage","state","regions","country","id","link","collapseID","toggleCollapse","setState","prevState","this","props","changeCountry","countries","flags","RUSSIA","USA","KOREA","color","light","expand","onClick","isOpen","navbar","href","className","right","map","region","index","key","to","src","alt","Component","HeaderNews","article","url","title","Array","fill","join","HeaderNewsLine","generalContent","FooterPage","fluid","md","Date","getFullYear","role","aria-label","CarouselPage","SpecialArticle","specialArticle","SpecialArticle2","length","activeItem","showControls","showIndicators","itemId","toString","urlToImage","overlay","description","style","width","waves","content","TabCard","cleverTime","moment","startOf","publishedAt","getHours","fromNow","maxWidth","source","name","TabList","CovidCard","data","confirmed","deaths","recovered","lastUpdate","toLocaleTimeString","start","end","value","duration","separator","border","FetchData","a","changeableUrl","axios","get","console","log","FetchDailyData","modifiedData","slice","dailyData","total","date","reportDate","FetchCountries","CountryPicker","handleChange","useState","fetchedCountries","setFetchedCountries","useEffect","FetchAPI","styles","formControl","default","onChange","e","target","i","CovidChart","setDailyData","LineChart","undefined","labels","datasets","label","borderColor","backgroundColor","BarChart","options","legend","display","text","container","Covid","TabPage","tabs","toggle","tab","category","changeCategory","setTimeout","categories","active","tabId","Welcome","SpinnerPage","position","left","top","DiscoverCard","sm","DiscoverCardList","Discover","USACollection","RUSSIACollection","KOREACollection","countriesList","App","collection","currentCountry","currentCategoryID","isLoading","newCategory","prevProps","findIndex","includes","Navbar","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13fddb75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__ukm7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Y_Jz\"};","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBNavbarBrand } from \"mdbreact\";\nimport './NavbarStyle.css'\nimport RUSSIA from './russia.svg'\nimport USA from './united-states-of-america.svg'\nimport KOREA from './south-korea.svg'\n\nclass NavbarPage extends Component {\n  state = {\n    regions: [\n      { country: 'USA', id: '1', link: '/' },\n      { country: 'RUSSIA', id: '2', link: '/' },\n      { country: 'KOREA', id: '3', link: '/' },\n    ],\n    collapseID: \"\",\n  };\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }));\n\n  render() {\n    const { changeCountry, countries } = this.props\n    const flags = {\n      'RUSSIA': RUSSIA,\n      'Россия': RUSSIA,\n      '러시아': RUSSIA,\n      'USA': USA,\n      '미국': USA,\n      'США': USA,\n      'KOREA': KOREA,\n      '대한민국': KOREA,\n      'Корея': KOREA\n    }\n    return (\n\n      <MDBNavbar color=\"cloudy-knoxville-gradient\" light expand=\"lg\">\n\n        <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\n\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\n          <MDBNavbarBrand href=\"#\" className='logoContainer'>\n            <span className=\"logo\"> T.O.P </span>\n          </MDBNavbarBrand>\n\n          {/* Replace the content with the data from the array */}\n          <MDBNavbarNav right>\n\n            {/* Flag Lit fsor regions */}\n            {this.state.regions.map((region, index) => (\n\n              <MDBNavItem key={index} className='navItemContainer'>\n                <MDBNavLink to={region.link} onClick={() => { changeCountry(countries[index]) }} >\n\n                  <img src={flags[countries[index]]} alt=\"React Logo\" className='flagImage' />\n                  {countries[index]}\n\n                </MDBNavLink>\n              </MDBNavItem>\n\n            ))}\n\n            {/* <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/\">\n                <MDBIcon icon=\"cog\" className=\"mr-1\" />Settings</MDBNavLink>\n            </MDBNavItem> */}\n\n            {/* <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/\">\n                <a href=\"https://www.atabekov.com\" alt='Farrukh Portfolio' >\n                <i className=\"fas fa-laptop-code mr-1\"></i> Atabekov Farrukh\n                </a>\n              </MDBNavLink>\n            </MDBNavItem> */}\n\n          </MDBNavbarNav>\n\n        </MDBCollapse>\n      </MDBNavbar>\n    );\n  }\n}\n\nexport default NavbarPage;\n","import React from \"react\";\nimport './HeaderNewsStyle.css'\n\nconst HeaderNews = (props) => {\n  return (\n      <a href={props.article.url} alt='news ticker'>\n        {props.article.title + Array(10).fill('\\xa0').join('') + '|'}  \n      </a>\n  )\n\n};\n\nexport default HeaderNews;","import React from 'react'\nimport HeaderNews from './HeaderNews/HeaderNews'\nimport './HeaderNewsLineStyle.css'\n\nconst HeaderNewsLine = (props) => {\n  return (\n    <div className=\"tcontainer\">\n      <div className=\"ticker-wrap\">\n        \n        <div className = 'ticker-side-note'>\n          Breaking News\n        </div>\n        \n        <div className=\"ticker-move\">\n            {props.generalContent.map((article, index) => (\n              <div className=\"ticker-item\" key={index}>\n              <HeaderNews article={article}/>\n              </div>\n            ))}\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderNewsLine","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"cloudy-knoxville-gradient\" className=\"font-small pt-4 mt-4 text-dark\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">T.O.P </h5>\n            <p>This website is created to display top news from three regions instantly</p>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Top sources</h5>\n            <ul>\n              <li className=\"list-unstyled\">\n                <a href=\"https://www.bbc.com/\">BBC News</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a href=\"https://en.yna.co.kr/\">Yonhap News</a>\n              </li>\n            </ul>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: \n          <a href=\"https://www.atabekov.com\" alt ='Farrukh website'> \n          <span role = 'img' aria-label = 'hears'>🖤</span> \n          Atabekov Farrukh </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;","import React from \"react\";\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask,MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from \"mdbreact\";\nimport './CarouselPage.css'\n\nconst CarouselPage = (props) => {\n  const imageUrlForEmptyArticle = 'https://i.pinimg.com/originals/bf/97/f7/bf97f7fb893ea02038a28bf6415fed02.jpg'\n  const SpecialArticle = props.specialArticle\n  const SpecialArticle2 = props.generalContent[props.generalContent.length - 1]\n  return (\n    <div className=\"w-100\">\n      <MDBCarousel\n        activeItem={1}\n        length={props.generalContent.length - 1}\n        showControls={true}\n        showIndicators={true}\n        className=\"z-depth-1 \"\n      >\n        <MDBCarouselInner>\n          {props.generalContent.map((article, index) => (\n            <MDBCarouselItem key={index} itemId={index.toString()}>\n              <MDBView>\n                {/* <div style={{ backgroundImage: `url(${article.urlToImage?article.urlToImage: imageUrlForEmptyArticle})`}} className = \"imageContainer\"/> */}\n                <img\n                  className=\"d-block w-100\"\n                  src={article.urlToImage ? article.urlToImage : imageUrlForEmptyArticle}\n                  alt=\"First slide\"\n                />\n                <MDBMask overlay=\"black-light\" />\n              </MDBView>\n              <MDBCarouselCaption className=\"articleURL\">\n                <a href={article.url} className=\"text-white\">\n                  <h3 className=\"h3-responsive\">{article.title}</h3>\n                </a>\n                <p>{article.description}</p>\n              </MDBCarouselCaption>\n            </MDBCarouselItem>\n\n          ))}\n\n        </MDBCarouselInner>\n      </MDBCarousel>\n\n      <div className='mt-5'>\n        <MDBCard style={{ width: \"22rem\" }} className=\"mt-3 mr-4 w-100\" >\n\n          <MDBCardBody className=\"d-flex flex-direction-column\">\n            <MDBCardImage className=\"img-fluid\" src={SpecialArticle.urlToImage} waves />\n            <div className='m-4'>\n              <MDBCardTitle>{SpecialArticle.title}</MDBCardTitle>\n              <MDBCardText>\n                {SpecialArticle.content}\n              </MDBCardText>\n              <MDBCardText className='d-flex justify-content-end '>\n              <a href={SpecialArticle.url}>Read more</a>\n              </MDBCardText>\n            </div>\n          </MDBCardBody>\n\n        </MDBCard>\n\n\n        <MDBCard style={{ width: \"22rem\" }} className=\"mt-3 mr-4 w-100\" >\n\n          <MDBCardBody className=\"d-flex flex-direction-column\">\n            <MDBCardImage className=\"img-fluid\" src={SpecialArticle2.urlToImage} waves />\n            <div className='m-4'>\n              <MDBCardTitle>{SpecialArticle2.title}</MDBCardTitle>\n              <MDBCardText>\n                {SpecialArticle2.content}\n              </MDBCardText>\n              <MDBCardText className='d-flex justify-content-end '>\n              <a href= {SpecialArticle2.url}>Read more</a>\n              </MDBCardText>\n            </div>\n\n          </MDBCardBody>\n\n        </MDBCard>\n\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default CarouselPage;","import React from 'react';\nimport moment from 'moment';\nimport { MDBCard, MDBCardBody, MDBCardText, MDBCardImage} from 'mdbreact';\nimport './TabCard.css'\n\nconst TabCard = (props) => {\n  const cleverTime = moment().startOf(new Date(props.content.publishedAt).getHours).fromNow(); \n  return (\n    <a href={props.content.url}>\n      <MDBCard className=\"tab-card-container w-100 mb-4 shadow-box-example hoverable\" style={{ maxWidth: \"22rem\", color: 'black' }} >\n      <MDBCardImage className=\"img-fluid\" src={props.content.urlToImage} waves />\n        <MDBCardBody>\n          {/* <MDBCardTitle>{props.content.title}</MDBCardTitle> */}\n          <MDBCardText>{props.content.description}</MDBCardText>\n        </MDBCardBody>\n        <div className = 'd-flex justify-content-between ml-3 mr-3'>\n        <p className =\"font-weight-bold\">{props.content.source.name}</p>\n        <p>{cleverTime}</p>\n        </div>\n      </MDBCard>\n    </a>\n  )\n}\n\nexport default TabCard;","import React from 'react'\nimport TabCard from '../TabCard/TabCard'\nimport './TabList.css'\n\nexport const TabList = (props) => (\n  <div className=\"tablist-container ml-5\">\n  {props.generalContent.map((content, index) => (\n    <TabCard key = {index} content = {content} />\n  ))}\n  </div>\n)","import React from 'react';\nimport CountUp from 'react-countup'\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\nimport './CovidCardStyle.css'\n\nexport const CovidCard = ({ data: {confirmed, deaths, recovered, lastUpdate} }) => (\n\n  <div className='container'>\n\n\n    <MDBCard className='border border-primary mr-3 mt-3 ' style={{ maxWidth: \"22 rem\" }}>\n      <MDBCardBody className='primary-color'>\n        <MDBCardTitle className='text-white font-weight-bold'>COVID-19</MDBCardTitle>\n        <MDBCardText className = 'text-white'>Updated: {new Date(lastUpdate).toLocaleTimeString('kr-US')} </MDBCardText>\n      </MDBCardBody>\n    </MDBCard>\n\n    <MDBCard className='border border-primary mr-3 mt-3 ' style={{ maxWidth: \"22 rem\" }}>\n      <MDBCardBody className='primary-color-dark'>\n        <MDBCardTitle className='text-white font-weight-bold'>\n        <CountUp start = {0} end = {confirmed.value} duration = {2.75} separator = ',' ></CountUp>\n        </MDBCardTitle>\n        <MDBCardTitle className='text-white font-weight-bold'>CONFIRMED</MDBCardTitle>\n      </MDBCardBody>\n    </MDBCard>\n\n    <MDBCard className='border border-success mr-3 mt-3 ' style={{ maxWidth: \"22 rem\", border: '5px solid green' }}>\n      <MDBCardBody className='success-color-dark'>\n        <MDBCardTitle className='text-white font-weight-bold'>\n        <CountUp start = {0} end = {recovered.value} duration = {2.75} separator = ',' ></CountUp>\n        </MDBCardTitle>\n        <MDBCardTitle className='text-white font-weight-bold'>RECOVERED</MDBCardTitle>\n      </MDBCardBody>\n    </MDBCard>\n\n\n    <MDBCard className='border border-danger mr-3 mt-3 ' style={{ maxWidth: \"22 rem\" }}>\n      <MDBCardBody className='danger-color-dark'>\n        <MDBCardTitle className='text-white font-weight-bold'>\n        <CountUp start = {0} end = {deaths.value} duration = {2.75} separator = ',' ></CountUp>\n        </MDBCardTitle>\n        <MDBCardTitle className='text-white font-weight-bold'>DECEASED</MDBCardTitle>\n      </MDBCardBody>\n    </MDBCard>\n  </div>\n)\n","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const FetchData = async (country) => {\n  let changeableUrl = url;\n\n  if(country){\n    changeableUrl = `${url}/countries/${country}`\n  }\n\n  try {\n    const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl)\n    return { confirmed, recovered, deaths, lastUpdate,}\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const FetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`)\n\n    const modifiedData = data.slice(data.length-120).map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate }))\n\n    return modifiedData\n  }\n  catch {\n\n  }\n}\n\nexport const FetchCountries = async () => {\n  try {\n    const {data: {countries}} = await axios.get(`${url}/countries`)\n    return countries.map((country) => country.name)\n  }\n  catch(error) {\n    console.log(error);\n  }\n}","import React, {useState,useEffect} from 'react'\nimport {NativeSelect, FormControl} from '@material-ui/core'\nimport {FetchCountries} from '../../../api'\nimport styles from './CountryPicker.module.css'\n\nexport const CountryPicker = ({handleChange}) => {\n\n  const[fetchedCountries, setFetchedCountries] = useState([])\n\n  useEffect(() => {\n    const FetchAPI = async () => {\n      setFetchedCountries(await FetchCountries())\n    }\n\n    FetchAPI()\n  }, [setFetchedCountries])\n\n  return ( \n    <FormControl className = {styles.formControl}>\n      <NativeSelect default = '' onChange = {(e) => handleChange(e.target.value)} >\n        <option value = ''>Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key = {i} value = {country}>{country}</option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { FetchDailyData } from '../../../api';\n\nexport const CovidChart = ({\n  data: { confirmed, recovered, deaths },\n  country,\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const FetchAPI = async () => {\n      setDailyData(await FetchDailyData());\n    };\n\n    FetchAPI();\n  }, []);\n\n  const LineChart =\n    dailyData !== undefined ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map((data) => data.confirmed),\n              label: 'Confirmed',\n              borderColor: '#3333ff',\n              fill: true,\n            },\n            {\n              data: dailyData.map((data) => data.deaths),\n              label: 'Deaths',\n              borderColor: 'red',\n              backgroundColor: 'rgba(255,0,0,0.5)',\n              fill: true,\n            },\n          ],\n        }}\n      />\n    ) : null;\n\n  const BarChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['CONFIRMED', 'RECOVERED', 'DECEASED'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `CURRENT STATE IN ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? BarChart : LineChart}</div>\n  );\n};\n","import React from 'react';\nimport { CovidCard } from './CovidCard/CovidCard'\nimport { CountryPicker } from './CountryPicker/CountryPicker'\nimport { CovidChart } from './CovidChart/CovidChart'\nimport {MDBRow, MDBCol } from \"mdbreact\";\n\nexport const Covid = ({ handleChange, data, country }) => (\n  <MDBRow className = \"mt-3\">\n  \n    <MDBCol md=\"8\" > \n        <CountryPicker handleChange={handleChange} /> \n        <CovidChart data={data} country={country} />   \n    </MDBCol>\n\n    <MDBCol md=\"4\"> \n       <CovidCard data = {data} />\n    </MDBCol>\n  \n  </MDBRow>\n\n)\n","import React, { Component } from \"react\";\nimport { MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\nimport CarouselPage from '../Carousel/CarouselPage'\nimport { TabList } from './TabList/TabList'\nimport { Covid } from '../Covid19/CovidPage'\n\nclass TabPage extends Component {\n  state = {\n    activeItem: \"1\",\n    tabs: [\n      { id: '1', role: 'tab', link: '/' },\n      { id: '2', role: 'tab', link: '/' },\n      { id: '3', role: 'tab', link: '/' },\n      { id: '4', role: 'tab', link: '/' },\n      { id: '5', role: 'tab', link: '/' },\n      { id: '6', role: 'tab', link: '/' },\n      { id: '7', role: 'tab', link: '/' },\n      { id: '8', role: 'tab', link: '/' },\n    ],\n  };\n\n  toggle = (tab, category) => e => {\n    this.props.changeCategory(category);\n\n    if (this.state.activeItem !== tab) {\n      setTimeout(() => {\n        this.setState({\n          activeItem: tab\n        })\n      }, 100)\n    }\n  };\n\n\n  render() {\n\n    const { categories, generalContent, handleChange, data, country } = this.props\n\n    return (\n      <div className=\"w-100 pl-2 pr-2\">\n\n        <MDBNav className=\"nav-tabs\">\n          {this.state.tabs.map((tab, index) => (\n            <MDBNavItem key={index}>\n              <MDBNavLink className='text-dark'\n                link to={tab.link}\n                active={this.state.activeItem === tab.id}\n                onClick={this.toggle(tab.id, categories[index])}\n                role={tab.role}>\n                {categories[index]}\n              </MDBNavLink>\n            </MDBNavItem>\n          ))}\n        </MDBNav>\n\n        <MDBTabContent activeItem={this.state.activeItem} >\n          {this.state.tabs.map((tab, index) => {\n            if (index === 7) {\n              return (\n                <MDBTabPane key={index} tabId={tab.id} role=\"tabpanel\">\n                  <Covid handleChange={handleChange} data={data} country={country} />\n                </MDBTabPane>)} \n                \n            else {\n\n              return (\n                <MDBTabPane key={index} tabId={tab.id} role=\"tabpanel\">\n\n                  <div className=\"mt-1 d-flex flex-direction p-3\">\n                    <CarouselPage generalContent={generalContent.slice(0, 7)} specialArticle = {generalContent[8]} />\n                    <TabList generalContent={generalContent.slice(9, 12)} />\n                  </div>\n\n                </MDBTabPane> )\n            }\n\n          })}\n\n        </MDBTabContent>\n\n      </div>\n    );\n  }\n}\nexport default TabPage;","import React, { Component } from 'react'\n\n\nclass Welcome extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Hello</h1>\n        <p>{this.props.data}</p>\n      </div>\n    )\n  }\n\n}\n\n\nexport default Welcome","import React from \"react\";\nimport './SpinnerPage.css'\n\nconst SpinnerPage = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"spinner-grow text-danger\" role=\"status\" style = {{position: 'absolute', left: '50%', top: '50%'}}>\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SpinnerPage;","import React from 'react'\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCol } from \"mdbreact\";\nimport './DiscoverCard.css'\n\nexport const DiscoverCard = (props) => (\n  \n  <MDBCol sm=\"3\">\n    \n    <a href= {props.content.url}>\n      <MDBCard className=\"discover-card-container border border-primary shadow-box-example z-depth-1\" style = {{color:'black'}}>\n        {/* <MDBCardImage className=\"img-fluid\" src={props.content.urlToImage} waves /> */}\n        \n        <MDBCardBody>\n          <MDBCardTitle>{props.content.title}</MDBCardTitle>\n          <MDBCardText>{props.content.description}</MDBCardText>\n        </MDBCardBody>\n        \n      </MDBCard>\n    </a>\n\n  </MDBCol>\n)","import React from 'react';\nimport { MDBRow } from \"mdbreact\";\nimport { DiscoverCard } from '../DiscoverCard/DiscoverCard'\n\nconst DiscoverCardList = (props) => {\n  return (\n    <div className=\"m-5\">\n      <MDBRow>\n        {props.generalContent.map((content, index) => (\n          <DiscoverCard key={index} content={content} />\n        ))}\n      </MDBRow>\n    </div>\n  );\n};\n\nexport default DiscoverCardList;","import React from 'react'\nimport DiscoverCardList from './DiscoverCardList/DiscoverCardList'\nimport \"./DiscoverStyle.css\"\n\nexport const Discover = (props) => (\n  <div>\n    <h4 className = \"discover-container\"> DISCOVER MORE...</h4>\n    <DiscoverCardList generalContent = {props.generalContent.slice(0,4)}/>\n  </div>\n)","import USACollection from '../api/articles/USA.json'\nimport RUSSIACollection from '../api/articles/RUSSIA.json'\nimport KOREACollection from '../api/articles/KOREA.json'\n\nexport const USA = { \n  data: USACollection, \n  categories: ['General', 'Business', 'Entertainment', 'Health', 'Science', 'Sports', 'Technology', 'COVID-19'],\n  countries: ['USA', 'RUSSIA', 'KOREA']\n}\n\nexport const RUSSIA = {\n  data: RUSSIACollection,\n  categories: ['Все', 'Экономика', 'Культура', 'Здоровье', 'Наука и техника', 'Спорт', 'Технология','COVID-19'],\n  countries: ['США', 'Россия', 'Корея']\n}\n\nexport const KOREA = { \n  data: KOREACollection,  \n  categories: ['최신기사', '경제', '연예', '건강 ', '과학 ', '스포츠', '기술', 'COVID-19'],\n  countries: ['미국', '러시아', '대한민국']\n} \n\nexport const countriesList = [['USA', 'США','미국',], ['RUSSIA','Россия','러시아'], ['KOREA','Корея', '대한민국']]","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HeaderNewsLine from \"./components/HeaderNews/HeaderNewsLine\";\nimport FooterPage from \"./components/Footer/FooterPage\";\nimport TabPage from \"./components/Tab/TabPage\";\nimport Welcome from \"./components/Welcome/Welcome\";\nimport SpinnerPage from \"./components/Spinner/SpinnnerPage\";\nimport { Discover } from \"./components/Discover/Discover\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { FetchData } from \"./api\";\nimport \"./App.css\";\nimport {\n  USA,\n  RUSSIA,\n  KOREA,\n  countriesList,\n} from \"./consonants/CountryChangeConsonants\";\n\nclass App extends Component {\n  state = {\n    collection: [],\n    categories: [\n      \"General\",\n      \"Business\",\n      \"Entertainment\",\n      \"Health\",\n      \"Science\",\n      \"Sports\",\n      \"Technology\",\n      \"COVID-19\",\n    ],\n    countries: [\"USA\", \"RUSSIA\", \"KOREA\"],\n    currentCountry: \"us\",\n    currentCategoryID: 0,\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    //Get the data for covid statistics\n    const data = await FetchData();\n    console.log(data);\n\n    //Set the collection to american articles and covid stats\n    this.setState({\n      data: data,\n      isLoading: false,\n      collection: USA.data,\n    });\n  }\n\n  //Set the current category id to the index of the new selected category\n  changeCategory = (newCategory) => {\n    newCategory !== \"COVID-19\"\n      ? this.setState((prevState, prevProps) => {\n          return {\n            currentCategoryID: prevState.categories.findIndex(\n              (category) => category === newCategory\n            ),\n          };\n        })\n      : this.setState((prevState, prevProps) => {\n          return {\n            currentCategoryID: prevState.currentCategoryID,\n          };\n        });\n  };\n\n  //Change the category for news\n  changeCountry = async (country) => {\n    console.log(country, \"inside function\");\n    const data = countriesList[1].includes(country)\n      ? RUSSIA\n      : countriesList[2].includes(country)\n      ? KOREA\n      : USA;\n    this.setState({\n      isLoading: false,\n      collection: data.data,\n      categories: data.categories,\n      countries: data.countries,\n    });\n  };\n\n  //Change the category needed to display the COVID stats\n  handleChange = async (country) => {\n    //fetch the data\n    const data = await FetchData(country);\n    this.setState({\n      data: data,\n      country: country,\n    });\n    //set the state\n    console.log(country);\n  };\n\n  render() {\n    const data = this.state.collection[this.state.currentCategoryID];\n    console.log(this.state.collection);\n    return this.state.isLoading ? (\n      <SpinnerPage />\n    ) : (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar\n            changeCountry={this.changeCountry}\n            countries={this.state.countries}\n          />\n          <HeaderNewsLine generalContent={data} />\n          <TabPage\n            generalContent={data}\n            changeCategory={this.changeCategory}\n            categories={this.state.categories}\n            handleChange={this.handleChange}\n            data={this.state.data}\n            country={this.state.country}\n          />\n          <Discover generalContent={data} />\n          <Route path=\"/hello\" component={Welcome} />\n          <FooterPage />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport 'bootstrap-css-only/css/bootstrap.min.css'\nimport 'mdbreact/dist/css/mdb.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/russia.2451b45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/united-states-of-america.c6f63129.svg\";","module.exports = __webpack_public_path__ + \"static/media/south-korea.d185ec87.svg\";"],"sourceRoot":""}